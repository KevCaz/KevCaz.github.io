<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cli on KevCaz's Website</title><link>https://kevcaz.github.io/tags/cli/</link><description>Recent content in Cli on KevCaz's Website</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Content under CC0 1.0 Universal unless otherwise specified.</copyright><lastBuildDate>Mon, 04 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://kevcaz.github.io/tags/cli/index.xml" rel="self" type="application/rss+xml"/><item><title>Reading 'The Linux command line' - Part I</title><link>https://kevcaz.github.io/notes/2024/03/2024-03-04_reading_the_linux/</link><pubDate>Mon, 04 Mar 2024 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2024/03/2024-03-04_reading_the_linux/</guid><description>I have been using the command line for more than 10 years now, I started on MacOS1 and I increased my usage of the Terminal when I switched to Linux. I am now comfortable with the Linux command line but still looking for ways to improve my skills. Recently, I stumbled into no starch press that offers a great selection of books and found out that several are available at the library.</description></item><item><title>Converting svg to eps with Inkscape cli</title><link>https://kevcaz.github.io/notes/2021/12/2021-12-06_converting_svg_to/</link><pubDate>Mon, 06 Dec 2021 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2021/12/2021-12-06_converting_svg_to/</guid><description>&amp;#x23e9; tl;dr: You can convert your SVG file myfig.sv to EPS using inkscape myfig.svg -o myfig.eps --export-ps-level=3.
The problem For the latest paper we&amp;rsquo;ve submitted, the journal required figures in EPS, but all the figures I&amp;rsquo;ve had created were in SVG. That really puzzled me! Why on earth forcing authors to submit in EPS? At the very least the journal policy should allow authors to submit in other vector formats&amp;hellip; I actually think this is rather problematic because 1.</description></item><item><title>I think I have finally found the right tool to manage my todo lists</title><link>https://kevcaz.github.io/notes/2021/11/2021-11-21_i_think_i/</link><pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2021/11/2021-11-21_i_think_i/</guid><description>I do some efforts to be somewhat organized, but I tend to rely way too much on my memory and give too much importance to my mood when it comes to decide what work I need to do first. Over the last 2 or 3 years I have become more and more aware of this and I have realized that this affects my productivity. My goal is not to be as productive as I can but still, if I can achieve more work in less time at my work, it means that I can spend more time on doing something else than working&amp;hellip; which is basically the reason why I have been looking for tools to help me get more organized.</description></item><item><title>Count your lines of code with `cloc`</title><link>https://kevcaz.github.io/notes/2020/02/2020-02-09_count_your_lines/</link><pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2020/02/2020-02-09_count_your_lines/</guid><description>I recently found out about cloc that is a very useful command line tool written in Perl that &amp;ldquo;counts blank lines, comment lines, and physical lines of source code in many programming languages&amp;rdquo;1. Let&amp;rsquo;s see how it works üëÅ.
The first step is to install cloc, there are several ways to do so, as a Debian user (Debian Buster) all I had to do was to use apt-get:
1 $ apt-get install cloc Once installed, cloc can be call in a Terminal like so: cloc path/to/file_or_folder.</description></item><item><title>Convert a pdf file to a text file with pdftotext</title><link>https://kevcaz.github.io/notes/2019/11/2019-11-04_convert_a_pdf/</link><pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2019/11/2019-11-04_convert_a_pdf/</guid><description>Today I was asked whether I was aware of a way to extract a table from a pdf file. I actually knew about one CLI tool pdftotext &amp;#x1f517; that converts a pdf file to a text file and I had this memory that I had used it for tables in the past. pdftotext is developed by Glyph &amp;amp; Cog with several other CLI tools to manipulate pdf files and the pdf viewer Xpdf.</description></item><item><title>Combine multiple pdf files</title><link>https://kevcaz.github.io/notes/2019/10/2019-10-24_combine_multiple_pdf/</link><pubDate>Thu, 24 Oct 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2019/10/2019-10-24_combine_multiple_pdf/</guid><description>For a recent job application, I needed to combine several pdf files into a single one and to number its pages afterwards. I already knew that I would be able to use PDFtk, a smart CLI tool I mentioned in a previous note to combine the pdf files, but I was not sure how to proceed for the page numbering. Turns out that PDFtk is also useful for this too!</description></item><item><title>Use Gogh to color your terminal!</title><link>https://kevcaz.github.io/notes/2019/07/2019-07-26_use_gogh_to/</link><pubDate>Fri, 26 Jul 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2019/07/2019-07-26_use_gogh_to/</guid><description>As mentioned in a previous note, I now use Atom together with Gnome Terminal for most of my coding and writing time and really enjoy my current setup. As I use two different applications, I have similar but slightly different color schemes, which, weirdly enough, has been bugging me for a while&amp;hellip; That is why, a few days ago, I started to edit the color but looking a the them repository of the Atom theme I liked (e.</description></item><item><title>Send a set of command lines to GNOME Terminal</title><link>https://kevcaz.github.io/notes/2019/06/2019-06-10_send_a_set/</link><pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2019/06/2019-06-10_send_a_set/</guid><description>Context As mentioned several times on this website, I use Atom for my coding as well as for writing posts and manuscripts. While coding, one often needs to run commands in a terminal. To do so, I use specific Atom packages such as IDE-R or Julia Client to run R and Julia commands respectively and platformio-ide-terminal. The latter meets most of my expectations, but:
the terminal emulated is in a bottom panel and when I&amp;rsquo;m working on my laptop I cannot get a good overview of the code and the corresponding outputs at the same time, pretty annoying&amp;hellip; and having the terminal in the right panel is a feature unlikely to be implemented in a near future;</description></item><item><title>Extract a range of pages from a pdf file</title><link>https://kevcaz.github.io/notes/2019/05/2019-05-30_extract_a_range/</link><pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2019/05/2019-05-30_extract_a_range/</guid><description>Today, I was looking for a way to extract pages from a pdf file with the command line interface and stumbled on this answer on , and so I decided to try PDFtk. After a quick installation (apt-get install pdftk), I simply reproduced the example in the answer with my file!
1 $ pdftk book.pdf cat 34-45 output chapter2.pdf Very handy, quite easy to use and efficient! Digging a little more the documentation, it turns out that you can do way more!</description></item><item><title>Multiple-protocol with aria2</title><link>https://kevcaz.github.io/notes/2019/05/2019-05-10_multiple_protocol_with/</link><pubDate>Fri, 10 May 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2019/05/2019-05-10_multiple_protocol_with/</guid><description>People at TecMint write great posts and gather tons of tips about Linux. Recently, they twitted about aria2:
Aria2 ‚Äì A Multi-Protocol Command-Line #Download Tool for #Linux https://t.co/u7GM9Sgozu via @tecmint RT @linuxtoday pic.twitter.com/1GMGKHOEYA
&amp;mdash; Linux Inside: The Ideal Blog for Sysadmins &amp;amp; Geeks (@tecmint) April 29, 2019 I gave it a try, and it&amp;rsquo;s pretty sweet &amp;#x1f604;! With a simple command line, you can download any file using any of the most common transfer protocols!</description></item><item><title>Modify and combine a set of files in one</title><link>https://kevcaz.github.io/notes/2018/10/2018-10-29_modify_and_combine/</link><pubDate>Mon, 29 Oct 2018 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2018/10/2018-10-29_modify_and_combine/</guid><description>Today I was looking for a way to combine a set of files in one but before appending a given file, the 2 first lines as well as the last line had to be removed. On Stackoverflow I found a couple of answers (see questions 18006581, 12176492 and 5410757) and based on these I decided to use a combination of head and tail. I ended up creating the following shell script:</description></item><item><title>Make your computer talk!</title><link>https://kevcaz.github.io/notes/2018/10/2018-10-20_make_your_computer/</link><pubDate>Sat, 20 Oct 2018 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2018/10/2018-10-20_make_your_computer/</guid><description>When I was on MacOS, I really enjoyed the command say to make my macOS speak (another bad reason to procrastinate) and I was looking for a similar tool on Linux to make my Lenovo speak &amp;#x1f604;. After a quick search, I found two software: spd-say and espeak. They both offer the same basic options, similar to the ones say provides on MacOS.
spd-say spd-say was already included in the set of tools I install with Debian so I checked out the documentation with man spd-say:</description></item></channel></rss>