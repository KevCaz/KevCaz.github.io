<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Image Manipulation on KevCaz's Website</title><link>https://kevcaz.github.io/tags/image-manipulation/</link><description>Recent content in Image Manipulation on KevCaz's Website</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Content under CC0 1.0 Universal unless otherwise specified.</copyright><lastBuildDate>Mon, 02 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://kevcaz.github.io/tags/image-manipulation/index.xml" rel="self" type="application/rss+xml"/><item><title>Color and rotate an image with ImageMagick</title><link>https://kevcaz.github.io/notes/2019/12/2019-12-02_color_and_rotate/</link><pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2019/12/2019-12-02_color_and_rotate/</guid><description>I&amp;rsquo;ve already written about ImageMagick in previous notes (e.g. this one about image resizing). Yesterday I used convert to color and rotate an image and I would like to show how simple it is here. Note that in order to show what the different command lines yield, I&amp;rsquo;ve used the PNG file of the GitHub Octocat (Octocat.png) available at https://github.com/logos.
Octocat.png To fill Octocat.png with black, I&amp;rsquo;ve used the following command line:</description></item><item><title>Memory issue with ImageMagick</title><link>https://kevcaz.github.io/notes/2019/08/2019-08-26_memory_issue_with/</link><pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2019/08/2019-08-26_memory_issue_with/</guid><description>Today, I was combining a set of images like so:
1 $ convert -append figP*.png out.png when I got error stating that cache resources exhausted. I was first surprised because it was the same set of images I combined a couple of days before EXCEPT that I significantly increased their resolution. So I googled the error message and found this issue on the GitHub repository of ImageMagick.
Well, turns out it was not a issue at all, I simply needed to change the memory limit as explained here and well summarized in the issue:</description></item><item><title>Combine images with ImageMagick</title><link>https://kevcaz.github.io/notes/2019/05/2019-05-16_combine_images_with/</link><pubDate>Thu, 16 May 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2019/05/2019-05-16_combine_images_with/</guid><description>I do love create figures with R, I found quite satisfying to make them very personalized, yet reproducible! However I sometime wish that combining two plots was easier (as it often requires to build larges matrices and crazy layout() calls). I was looking for a simple way to do basic combinations of customized R figures, and I stumbled on this discussion on showing how easy it is to do so with ImageMagick.</description></item><item><title>Make an image your favorite icon (favicon)</title><link>https://kevcaz.github.io/notes/2018/10/2018-10-24_make_an_image/</link><pubDate>Wed, 24 Oct 2018 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2018/10/2018-10-24_make_an_image/</guid><description>Favicon are every useful for visual grepping: we use them pretty much every day to quickly find a website in your bookmarks or to remember what a specific tab is about! Recently, I needed to convert a .png into a favicon, I knew that ImageMagick could handle this, here is the command line I used:
1 convert McTrickle.png -define icon:auto-resize=128,64,48,32,16 favicon.ico ImageMagick &amp;#x27a1;&amp;#xfe0f; &amp;#x1f44d; &amp;#x1f3c6;!</description></item><item><title>Resize image with Imagemagick</title><link>https://kevcaz.github.io/notes/2018/10/2018-10-05_resize_image_with/</link><pubDate>Fri, 05 Oct 2018 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2018/10/2018-10-05_resize_image_with/</guid><description>ImageMagick is a time saver! It&amp;rsquo;s designed and extremely powerful for manipulating images with a few command lines. Few weeks ago, I had to resize a bunch of .png images and realize how helpful ImageMagick could be is such case! All I had to do was creating a short shell script very similar to the following lines:
1 2 3 4 5 mkdir img_resized for f in *.png do convert $f -resize 250x250\&amp;gt; img_resized/${f%.</description></item></channel></rss>