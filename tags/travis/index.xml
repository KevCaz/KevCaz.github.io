<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Travis on KevCaz's Website</title><link>https://kevcaz.github.io/tags/travis/</link><description>Recent content in Travis on KevCaz's Website</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Content under CC0 1.0 Universal unless otherwise specified.</copyright><lastBuildDate>Sun, 12 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://kevcaz.github.io/tags/travis/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploy a pkgdown website on gh-pages manually</title><link>https://kevcaz.github.io/notes/ci/deploypkgdown2/</link><pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/ci/deploypkgdown2/</guid><description>This is another note about deploying a pkgdown1 website with Travis on gh-pages. I had previously used the package travis but I was recently interested in doing so manually. Fortunately, I found this very helpful walk-through by GÃ¡bor CsÃ¡rdi2. I used it and it worked well for a while, but at some point I had an issue with the deployment part (still not sure why), so I changed it. Instead of using the following config3</description></item><item><title>Deploy a pkgdown on gh-pages</title><link>https://kevcaz.github.io/notes/ci/deploypkgdown/</link><pubDate>Tue, 22 Oct 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/ci/deploypkgdown/</guid><description>There are three ways to deploy a website on your GitHub pages :
using the gh-pages; using the folder docs on your master branch; using the master branch. I frequently use the GitHub pages to deploy the pkgdown websites I create for my R packages. For a while, I was using the docs/ folder where the website is generated by default. But I figured that this way has two main drawbacks:</description></item><item><title>Reasonably complex matrix build with Travis</title><link>https://kevcaz.github.io/notes/ci/travismatrix/</link><pubDate>Tue, 02 Jul 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/ci/travismatrix/</guid><description>Matrix build is a very powerful feature of Travis CI: it allows you to define a list of custom environments wherein your software will be built. For instead, I check rcites on 4 different environments (note that Travis offers 3 different Ubuntu version, several MacOSX images and that the support for Windows is in early stage).
A few days ago, the matrix build I used for another R ðŸ“¦ failed with the following error (see https://travis-ci.</description></item><item><title>Run your jobs one by one on Travis!</title><link>https://kevcaz.github.io/notes/ci/runjobs1by1/</link><pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/ci/runjobs1by1/</guid><description>I now test rcites for 4 configurations on Travis so Travis runs 4 jobs. For a while, I was running all the jobs at once, and as rcites is R-client for a web API, many of the jobs failed because of the well-known error 429:
Too Many Requests (RFC 6585) (HTTP 429).
I always ended restarting some jobs, I coped with it. At some point, I stepped back and thought: &amp;ldquo;people people behind Travis are smart, so they should have thought about limiting concurrent jobs&amp;rdquo;.</description></item></channel></rss>