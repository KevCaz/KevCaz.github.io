<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on KevCaz's Website</title><link>https://kevcaz.github.io/tags/python/</link><description>Recent content in Python on KevCaz's Website</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Content under CC0 1.0 Universal unless otherwise specified.</copyright><lastBuildDate>Thu, 25 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://kevcaz.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Generating subtitles with `auto_subtitle`</title><link>https://kevcaz.github.io/notes/2024/07/2024-07-25_autosubtitle/</link><pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2024/07/2024-07-25_autosubtitle/</guid><description>I was recently trying to obtain subtitles for a video in Spanish. For numerous movies and TV shows, it is relatively easy to find subtitles files online (mainly as .srt files, i.e. SubRip files), but that is not true for all contents!
When I thought about automating the generation of subtitles for a minute, I was convinced that with a tool to extract the audio from a movie file and a trained AI model that would generate the transcript, it should be doable to automate the process.</description></item><item><title>Installing Python packages in Debian Trixie</title><link>https://kevcaz.github.io/notes/2023/08/2023-08-10_installing_python_packages/</link><pubDate>Thu, 10 Aug 2023 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2023/08/2023-08-10_installing_python_packages/</guid><description>I recently switched back to Debian testing and since last June, testing is Debian 13 (codename Trixie). As I was installing a bunch of Python packages, I got the following error:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 $ pip install numpy error: externally-managed-environment × This environment is externally managed ╰─&amp;gt; To install Python packages system-wide, try apt install python3-xyz, where xyz is the package you are trying to install.</description></item><item><title>Matplotlib could not be imported by pyimport `[SOLVED]`</title><link>https://kevcaz.github.io/notes/2021/11/2021-11-23_matplotlib_could_not/</link><pubDate>Tue, 23 Nov 2021 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2021/11/2021-11-23_matplotlib_could_not/</guid><description>I have been experiencing an issue following a recent Python update. Basically, when I was trying to use PyPlot, I got the following message error.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 julia&amp;gt; using PyPlot ERROR: InitError: PyError (PyImport_ImportModule The Python package matplotlib could not be imported by pyimport.</description></item><item><title>Updating all your Python packages</title><link>https://kevcaz.github.io/notes/2020/01/2020-01-05_updating_all_your/</link><pubDate>Sun, 05 Jan 2020 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2020/01/2020-01-05_updating_all_your/</guid><description>Even if I do not frequently code in Python, my setup includes several packages of this programming language. While I was looking for a simple way to update all installed packages, I found this thread on stack overflow which helps me writing the following alias in my zsh profile:
1 2 3 alias updpy=&amp;#39;for i in $(pip list --outdated --format=columns |tail -n +3|cut -d&amp;#34; &amp;#34; -f1) do pip install --user $i --upgrade done&amp;#39; Now, when I enter updpy in my Terminal, all installed Python packages are updated.</description></item></channel></rss>