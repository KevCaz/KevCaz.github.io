<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GitHub on KevCaz's Website</title><link>https://kevcaz.github.io/tags/github/</link><description>Recent content in GitHub on KevCaz's Website</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Content under CC0 1.0 Universal unless otherwise specified.</copyright><lastBuildDate>Mon, 13 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://kevcaz.github.io/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>Releasing the research compendium for our Labmnivory paper</title><link>https://kevcaz.github.io/econotes/2021/publish_compendium/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/econotes/2021/publish_compendium/</guid><description>&amp;#x1f4e3; This post was first published on mccannlab.ca. Good news everyone! This week, our &amp;ldquo;Labmnivory&amp;rdquo; paper led by Marie Gutgesell has been accepted in Bioscience. Therefore, the time has come to release the code we promised explicitly in the manuscript.
Code for theoretical investigations will be made available on GitHub and archive on Zenodo upon manuscript acceptance.
For reproducibility&amp;rsquo;s sake, we&amp;rsquo;ve structured our Julia scripts as a research compendium which so far has been hosted on GitHub, in a private repository.</description></item><item><title>GitHub actions, checkout and submodule</title><link>https://kevcaz.github.io/notes/2019/12/2019-12-04_github_actions_checkout/</link><pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2019/12/2019-12-04_github_actions_checkout/</guid><description>I now use GitHub Actions to deploy this website (see my previous note about it) and last Monday (two days ago &amp;#x1f603;) after I pushed I got an email saying the deployment failed and found the following error message in the console log:
1 ##[error]The input &amp;#39;submodules&amp;#39; is not supported in actions/checkout@v2 Turns out this is because version 2 of checkout does not support submodule yet (see this issue report https://github.</description></item><item><title>My first workflow with GitHub Actions</title><link>https://kevcaz.github.io/notes/2019/11/2019-11-20_my_first_workflow/</link><pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2019/11/2019-11-20_my_first_workflow/</guid><description>As explained on GitHub:
GitHub Actions makes it easy to automate all your software workflows, now with world-class CI/CD. Build, test, and deploy your code right from GitHub. Make code reviews, branch management, and issue triaging work the way you want.
I&amp;rsquo;ve heard about this feature and I decided to give it a first go yesterday as I wanted to deploy a notebook for the McCann Lab&amp;rsquo;s Theory Club built with bookdown.</description></item><item><title>GitHub pages site with Jekyll locally</title><link>https://kevcaz.github.io/notes/2019/07/2019-07-27_github_pages_site/</link><pubDate>Sat, 27 Jul 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2019/07/2019-07-27_github_pages_site/</guid><description>I use GitHub pages (aka gh-pages) very often now and find this feature extremely powerful for various reasons. This web site for instance, is first checked on Travis CI and then deployed to GitHub pages, which is way more convenient than using FileZilla.
Recently, I have been working on a small site for the QCBS that needed a site to introduce their R workshops. We (I was not the only one on board) decided to use the GitHub pages with Jekyll and one of the existing them, minima, that is we opt for using gh-pages the easiest way.</description></item><item><title>Emoticons in commit messages for manuscripts</title><link>https://kevcaz.github.io/notes/2019/05/2019-05-20_emoticons_in_commit/</link><pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2019/05/2019-05-20_emoticons_in_commit/</guid><description>I recently wrote a note about using emoticons in a standard way in commit messages and I now use them in a standard way following Gitmoji. I do so for my code, but I also use git for manuscrits and I also try to standardize the way I use emoticons in that case. Below is the set of emoticons I am currently using for manuscrits:
&amp;#x1f4dd; pencil add a significant piece of writing, paragraph; &amp;#x270f;&amp;#xfe0f; pencil2typos; &amp;#x1f4ca; bar_chart figures added or edited (figure or its caption); &amp;#x1f5d1;&amp;#xfe0f; wastebasket delete an file; &amp;#x2728; sparkles integrate co-author&amp;rsquo;s comment(s)/work; &amp;#x1f389; tada address reviewer&amp;rsquo;s comment(s); &amp;#x2b06;&amp;#xfe0f; arrow_up version submitted; &amp;#x1f680; rocket version accepted.</description></item><item><title>Emoticons in commit messages</title><link>https://kevcaz.github.io/notes/2019/02/2019-02-17_emoticons_in_commit/</link><pubDate>Sun, 17 Feb 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2019/02/2019-02-17_emoticons_in_commit/</guid><description>When you are working on a project with GitHub (or a similar web service based on ) that has tens of commits, using emoticons in commit messages makes the search in the history of your project very efficient. To add one emoticon to your commit message, you must use its name (check this cheat sheet) within colons in the commit message, e.g. &amp;ldquo;add this :emoticon_name:&amp;rdquo;. Personally, I mostly use the following emoticon:</description></item><item><title>Exceeding GitHub API rate limits?</title><link>https://kevcaz.github.io/notes/2018/11/2018-11-13_exceeding_github_api/</link><pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/2018/11/2018-11-13_exceeding_github_api/</guid><description>Yesterday, while Travis was testing rcites I got this error message for the 3 jobs:
1 2 3 4 5 6 7 8 9 Error: HTTP error 403. API rate limit exceeded for 104.154.255.220. (But here&amp;#39;s the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.) Rate limit remaining: 0/60 Rate limit reset at: 2018-11-12 23:24:16 UTC To increase your GitHub API rate limit - Use `usethis::browse_github_pat()` to create a Personal Access Token.</description></item></channel></rss>